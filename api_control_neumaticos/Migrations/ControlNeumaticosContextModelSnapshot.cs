// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_control_neumaticos.Models;

#nullable disable

namespace api_control_neumaticos.Migrations
{
    [DbContext(typeof(ControlNeumaticosContext))]
    partial class ControlNeumaticosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("api_control_neumaticos.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CODIGO_ALERTA")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_ALERTA");

                    b.Property<int>("ESTADO_ALERTA")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_ALERTA");

                    b.Property<DateTime?>("FECHA_ATENDIDO")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_ATENDIDO");

                    b.Property<DateTime>("FECHA_INGRESO")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_INGRESO");

                    b.Property<DateTime?>("FECHA_LEIDO")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_LEIDO");

                    b.Property<int>("ID_NEUMATICO")
                        .HasColumnType("int")
                        .HasColumnName("ID_NEUMATICO");

                    b.Property<int?>("USUARIO_ATENDIDO_ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_ATENDIDO");

                    b.Property<int?>("USUARIO_LEIDO_ID")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO_LEIDO");

                    b.HasKey("Id")
                        .HasName("PK__ALERTA__3214EC07");

                    b.HasIndex("ID_NEUMATICO");

                    b.HasIndex("USUARIO_ATENDIDO_ID");

                    b.HasIndex("USUARIO_LEIDO_ID");

                    b.ToTable("ALERTA", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Bitacora", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CODIGO")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<int>("ESTADO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA");

                    b.Property<int>("ID_OBJETO")
                        .HasColumnType("int")
                        .HasColumnName("ID_OBJETO");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("OBSERVACION")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OBSERVACION");

                    b.Property<string>("TIPO_OBJETO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPO_OBJETO");

                    b.HasKey("ID")
                        .HasName("PK_BITACORA");

                    b.ToTable("BITACORA", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Bodega", b =>
                {
                    b.Property<int>("ID_BODEGA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_BODEGA");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID_BODEGA"));

                    b.Property<string>("NOMBRE_BODEGA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE_BODEGA");

                    b.HasKey("ID_BODEGA")
                        .HasName("PK__BODEGA__3F5C45522D15E7A1");

                    b.ToTable("BODEGA", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.HistorialMovil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CODIGO")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<int>("ESTADO")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA");

                    b.Property<int>("IDMovil")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIL");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("OBSERVACION")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("OBSERVACIÓN");

                    b.HasKey("ID")
                        .HasName("PK_HISTORIAL_MOVIL");

                    b.HasIndex("IDMovil");

                    b.HasIndex("IDUsuario");

                    b.ToTable("HISTORIAL_MOVIL", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.HistorialNeumatico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CODIGO")
                        .HasColumnType("int");

                    b.Property<int>("ESTADO")
                        .HasColumnType("int");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IDNeumatico")
                        .HasColumnType("int")
                        .HasColumnName("ID_NEUMATICO");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("OBSERVACION")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("IDNeumatico");

                    b.HasIndex("IDUsuario");

                    b.ToTable("HISTORIAL_NEUMATICO", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Kilometros", b =>
                {
                    b.Property<int>("ID_KILOMETRO_DIARIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID_KILOMETRO_DIARIO"));

                    b.Property<DateTime>("FECHA_REGISTRO")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ID_MOVIL")
                        .HasColumnType("int");

                    b.Property<int>("KILOMETRO")
                        .HasColumnType("int");

                    b.HasKey("ID_KILOMETRO_DIARIO");

                    b.HasIndex("ID_MOVIL");

                    b.ToTable("KILOMETROS", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Movil", b =>
                {
                    b.Property<int>("IdMovil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MOVIL");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMovil"));

                    b.Property<int?>("CantidadNeumaticos")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_NEUMATICOS");

                    b.Property<int>("Ejes")
                        .HasColumnType("int")
                        .HasColumnName("EJES");

                    b.Property<int>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("FechaUltimaComprobacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_ULTIMA_COMPROBACION");

                    b.Property<int?>("ID_BODEGA")
                        .HasColumnType("int")
                        .HasColumnName("ID_BODEGA");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MARCA")
                        .IsFixedLength();

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MODELO")
                        .IsFixedLength();

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("PATENTE")
                        .IsFixedLength();

                    b.Property<int>("TipoMovil")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_MOVIL");

                    b.HasKey("IdMovil")
                        .HasName("PK__MOVIL__CEA90288602B00B0");

                    b.HasIndex("ID_BODEGA");

                    b.ToTable("MOVIL", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Neumatico", b =>
                {
                    b.Property<int>("ID_NEUMATICO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_NEUMATICO");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID_NEUMATICO"));

                    b.Property<int>("CODIGO")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<int>("ESTADO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime>("FECHA_INGRESO")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_INGRESO");

                    b.Property<DateTime?>("FECHA_SALIDA")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_SALIDA");

                    b.Property<int>("ID_BODEGA")
                        .HasColumnType("int")
                        .HasColumnName("ID_BODEGA");

                    b.Property<int?>("ID_MOVIL")
                        .HasColumnType("int")
                        .HasColumnName("MOVIL_ASIGNADO");

                    b.Property<int>("KM_TOTAL")
                        .HasColumnType("int")
                        .HasColumnName("KM_TOTAL");

                    b.Property<int>("TIPO_NEUMATICO")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("TIPO_NEUMATICO");

                    b.Property<int?>("UBICACION")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("UBICACION")
                        .IsFixedLength();

                    b.HasKey("ID_NEUMATICO")
                        .HasName("PK__NEUMATIC__BEA984E3CB53E60C");

                    b.HasIndex("ID_BODEGA");

                    b.HasIndex("ID_MOVIL");

                    b.ToTable("NEUMATICOS", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.SolicitudCorreos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Estado")
                        .HasMaxLength(320)
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_SOLICITUD");

                    b.Property<int>("IdSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("ID_SOLICITANTE");

                    b.HasKey("Id")
                        .HasName("PK_SOLICITUD_CORREOS");

                    b.HasIndex("IdSolicitante");

                    b.ToTable("SOLICITUD_CORREOS", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Tabla", b =>
                {
                    b.Property<int>("CodTabla")
                        .HasColumnType("int")
                        .HasColumnName("COD_TABLA");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int?>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO");

                    b.HasKey("CodTabla", "Codigo")
                        .HasName("PK__TABLA__B22008D28B9CFED8");

                    b.ToTable("TABLA", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("APELLIDOS");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CLAVE");

                    b.Property<int>("CodEstado")
                        .HasColumnType("int")
                        .HasColumnName("COD_ESTADO");

                    b.Property<int>("CodigoPerfil")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_PERFIL");

                    b.Property<string>("ContraseñaTemporal")
                        .HasColumnType("longtext")
                        .HasColumnName("CONTRASENA_TEMPORAL");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("CORREO");

                    b.Property<DateTime>("FechaClave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("FECHA_CLAVE")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ID_BODEGA")
                        .HasColumnType("int");

                    b.Property<int>("IntentosFallidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("INTENTOS_FALLIDOS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRES");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__91136B9039C79A3A");

                    b.HasIndex("ID_BODEGA");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Alerta", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Neumatico", "Neumatico")
                        .WithMany()
                        .HasForeignKey("ID_NEUMATICO")
                        .IsRequired();

                    b.HasOne("api_control_neumaticos.Models.Usuario", "UsuarioAtendido")
                        .WithMany()
                        .HasForeignKey("USUARIO_ATENDIDO_ID");

                    b.HasOne("api_control_neumaticos.Models.Usuario", "UsuarioLeido")
                        .WithMany()
                        .HasForeignKey("USUARIO_LEIDO_ID");

                    b.Navigation("Neumatico");

                    b.Navigation("UsuarioAtendido");

                    b.Navigation("UsuarioLeido");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.HistorialMovil", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Movil", "Movil")
                        .WithMany("Historiales")
                        .HasForeignKey("IDMovil")
                        .IsRequired();

                    b.HasOne("api_control_neumaticos.Models.Usuario", "Usuario")
                        .WithMany("Historiales")
                        .HasForeignKey("IDUsuario")
                        .IsRequired();

                    b.Navigation("Movil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.HistorialNeumatico", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Neumatico", "Neumatico")
                        .WithMany()
                        .HasForeignKey("IDNeumatico")
                        .IsRequired();

                    b.HasOne("api_control_neumaticos.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .IsRequired();

                    b.Navigation("Neumatico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Kilometros", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Movil", "Movil")
                        .WithMany()
                        .HasForeignKey("ID_MOVIL")
                        .IsRequired();

                    b.Navigation("Movil");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Movil", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Bodega", "Bodega")
                        .WithMany()
                        .HasForeignKey("ID_BODEGA");

                    b.Navigation("Bodega");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Neumatico", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Bodega", "BODEGA")
                        .WithMany()
                        .HasForeignKey("ID_BODEGA")
                        .IsRequired();

                    b.HasOne("api_control_neumaticos.Models.Movil", "MOVIL_ASIGNADO")
                        .WithMany()
                        .HasForeignKey("ID_MOVIL")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BODEGA");

                    b.Navigation("MOVIL_ASIGNADO");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.SolicitudCorreos", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Usuario", "Solicitante")
                        .WithMany("SolicitudesEnviadas")
                        .HasForeignKey("IdSolicitante")
                        .IsRequired();

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Usuario", b =>
                {
                    b.HasOne("api_control_neumaticos.Models.Bodega", "Bodega")
                        .WithMany()
                        .HasForeignKey("ID_BODEGA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Movil", b =>
                {
                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("api_control_neumaticos.Models.Usuario", b =>
                {
                    b.Navigation("Historiales");

                    b.Navigation("SolicitudesEnviadas");
                });
#pragma warning restore 612, 618
        }
    }
}
